import React, { useEffect } from 'react'
import { postUserTag, deleteUserTag, showAllUserTags } from '../../store/tag'
import { useDispatch } from 'react-redux'

const TagButtons = ({ everyTag, userId }) => {
    const dispatch = useDispatch()

    useEffect(() => {
        dispatch(showAllUserTags(userId))
    }, [dispatch])

    let tags = [];
    everyTag.map(tag => {
        if (tag.id) {
            tags.push(tag)
        }
    })

    const userTags = everyTag[everyTag.length - 1]



    console.log(userTags);

    const handleTag = async (e) => {
        if (e.target.value === 'follow') {
            dispatch(postUserTag(userId, e.target.id))
            e.target.value = 'un-follow'
        } else {
            await dispatch(deleteUserTag(userId, e.target.id))
            e.target.value = 'follow'
        }
    }

    const tagsValue = {}

    function tagToggle(tag) {
        // tagsValue[tag.id]
        // tag.userId
        return tag.userId ? tag.name : `Follow-${tag.name}`
        // console.log('hey')
    }



    function renderView() {
        return (tags?.map((tag) => {
            const userTagId = userTags[tag.id];
            console.log(`userTagId:`, userTagId)
            if (userTagId) {
                tagsValue[tag.id] = true;
            } else tagsValue[tag.id] = false;
            console.log(`WORK?`, tagsValue)
            return (
                <button
                    onClick={handleTag}
                    id={tag.id}
                    value={tagsValue[tag.id] ? 'un-follow' : 'follow'}
                    key={`user-tags-${tag.id}`}
                    name='follow-button'
                >
                    {tagToggle(tag)}
                </button>
            )
        }))

    }

    useEffect(() => {
        // renderView()
    })

    return (
        <>
            {renderView()}
        </>
    )
}

export default TagButtons
